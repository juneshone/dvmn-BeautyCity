# Generated by Django 5.0.7 on 2024-07-28 20:24

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=100, verbose_name='Город')),
                ('street', models.CharField(max_length=100, verbose_name='Улица')),
                ('house', models.CharField(max_length=100, verbose_name='Дом')),
                ('lng', models.FloatField(verbose_name='Координаты (долгота)')),
                ('lat', models.FloatField(verbose_name='Координаты (широта)')),
            ],
            options={
                'verbose_name': 'Адрес салона',
                'verbose_name_plural': 'Адреса салонов',
            },
        ),
        migrations.CreateModel(
            name='Pay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment', models.BigIntegerField(blank=True, null=True, verbose_name='Номер записи')),
                ('operation_id', models.CharField(max_length=255, unique=True, verbose_name='ID операции')),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Сумма')),
                ('is_success', models.BooleanField(blank=True, null=True, verbose_name='Успешно')),
                ('_type', models.CharField(blank=True, choices=[('tips', 'Чаевые'), ('service', 'Услуга')], max_length=255, null=True, verbose_name='Тип')),
            ],
            options={
                'verbose_name': 'Платеж',
                'verbose_name_plural': 'Платежи',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('price', models.IntegerField(verbose_name='Цена')),
                ('image', models.ImageField(blank=True, null=True, upload_to='services_images/', verbose_name='Изображение')),
            ],
            options={
                'verbose_name': 'Услуга',
                'verbose_name_plural': 'Услуги',
            },
        ),
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(max_length=100, unique=True, verbose_name='Телефон')),
                ('image', models.ImageField(blank=True, upload_to='users_images/', verbose_name='Изображение')),
                ('pin', models.CharField(max_length=4, null=True, verbose_name='код')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Salon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True, verbose_name='Название')),
                ('image', models.ImageField(blank=True, upload_to='salons_images/', verbose_name='Изображение')),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='salons', to='beauty_salons.address', verbose_name='Адреса салонов')),
            ],
            options={
                'verbose_name': 'Салон красоты',
                'verbose_name_plural': 'Салоны красоты',
            },
        ),
        migrations.CreateModel(
            name='Master',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='ФИО')),
                ('image', models.ImageField(blank=True, null=True, upload_to='masters_images/', verbose_name='Изображение')),
                ('profession', models.CharField(blank=True, max_length=100, null=True, verbose_name='Профессия')),
                ('salon', models.ManyToManyField(related_name='masters', to='beauty_salons.salon', verbose_name='Салон')),
                ('profile', models.ManyToManyField(related_name='masters_profiles', to='beauty_salons.servicecategory')),
            ],
            options={
                'verbose_name': 'Мастер',
                'verbose_name_plural': 'Мастера',
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Дата')),
                ('time', models.TimeField(verbose_name='Время')),
                ('status', models.CharField(choices=[('PAID', 'Оплаченный'), ('NOT_PAID', 'Не оплаченный')], default='NOT_PAID', max_length=50, verbose_name='Статус')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clients_appointments', to=settings.AUTH_USER_MODEL, verbose_name='Клиент')),
                ('master', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='masters_appointments', to='beauty_salons.master', verbose_name='Мастер')),
                ('salon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='salons_appointments', to='beauty_salons.salon', verbose_name='Салон')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='beauty_salons.service', verbose_name='Наименование услуги')),
            ],
            options={
                'verbose_name': 'Запись',
                'verbose_name_plural': 'Записи',
            },
        ),
        migrations.AddField(
            model_name='service',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='beauty_salons.servicecategory'),
        ),
    ]
